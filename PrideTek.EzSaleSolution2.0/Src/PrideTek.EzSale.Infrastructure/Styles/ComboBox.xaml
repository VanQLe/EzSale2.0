<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PrideTek.EzSale.Infrastructure.Styles">

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver" >
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowHover" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderHover" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"  Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="{DynamicResource DisabledOpacity}" />
                            <DoubleAnimation Duration="0"  Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" To="{DynamicResource DisabledOpacity}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderFocused" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowFocused" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3">
                            <VisualTransition.GeneratedEasingFunction>
                                <CircleEase EasingMode="EaseOut"/>
                            </VisualTransition.GeneratedEasingFunction>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Focused" >
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderFocused" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowFocused" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="#CCCCCC" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="BorderHover" Grid.ColumnSpan="2" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="#CCCCCC" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Border x:Name="BorderFocused" Grid.ColumnSpan="2" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="#CCCCCC" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Path x:Name="Arrow" Data="M0,0 L9,0 L4.5,7 z" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" UseLayoutRounding="False" Height="7" VerticalAlignment="Center" HorizontalAlignment="Right" Width="9" Margin="0,1,5,0" Grid.Column="1" />
            <Path x:Name="ArrowHover" Data="M0,0 L9,0 L4.5,7 z" Stretch="Fill" Stroke="{DynamicResource ControlHoverBorderBrush}" UseLayoutRounding="False" Height="7" VerticalAlignment="Center" HorizontalAlignment="Right" Width="9" Margin="0,1,5,0" Opacity="0" Grid.Column="1"  />
            <Path x:Name="ArrowFocused" Data="M0,0 L9,0 L4.5,7 z" Stretch="Fill" Stroke="{DynamicResource ControlFocusBorderBrush}" UseLayoutRounding="False" Height="7" VerticalAlignment="Center" HorizontalAlignment="Right" Width="9" Margin="0,1,5,0" Opacity="0" Grid.Column="1" />
        </Grid>
    </ControlTemplate>



    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBox1" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}" />
        <Setter Property="Height" Value="{DynamicResource ControlHeight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"  Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="Opacity" To="{DynamicResource DisabledOpacity}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Foreground="{TemplateBinding Foreground}"
                                      Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                      Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" />
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}" MinHeight="{TemplateBinding MinHeight}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" MinWidth="{TemplateBinding MinWidth}" >
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" CaretBrush="{DynamicResource AccentBrush1_1}"  Template="{StaticResource ComboBoxTextBox}" 
                                 Margin="3,3,23,3" Focusable="True" Background="Transparent" Foreground="{TemplateBinding Foreground}" Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" 
                                 VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                 MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        </TextBox>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" SnapsToDevicePixels="True" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" >
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Margin="0,0,8,8" BorderBrush="{DynamicResource PopupBorderBrush}" Background="{DynamicResource PopupBackground}" BorderThickness="1,1,1,1" SnapsToDevicePixels="True" Focusable="False">
                                    <Border.Effect>
                                        <DropShadowEffect Opacity="0.5" ShadowDepth="4" Color="{DynamicResource DropShadowColor_Invariant}" BlurRadius="4" />
                                    </Border.Effect>
                                    <ScrollViewer SnapsToDevicePixels="True" >
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       
    </Style>

    <Style x:Key="ComboBoxItem1" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="BorderThickness" Value="1,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Padding" Value="4,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground2}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem" >
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HighlightVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightVisual" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalContent">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedContent">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedVisual" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalContent">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedContent">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NormalVisual" Background="{TemplateBinding Background}" />
                        <Border x:Name="HighlightVisual" Background="{DynamicResource HoverBrush2}" BorderBrush="{DynamicResource AccentBrush1_1}" BorderThickness="1" Opacity="0" />
                        <Border x:Name="SelectedVisual" Background="{DynamicResource SelectedBackground_Invariant}" BorderBrush="{DynamicResource SelectedBorder_Invariant}" BorderThickness="1" Opacity="0"  />
                        <ContentControl x:Name="ContentControl" Foreground="{DynamicResource Foreground1_White}" >
                            <ContentPresenter x:Name="SelectedContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </ContentControl>
                        <ContentPresenter x:Name="NormalContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    
    <Style  TargetType="ComboBox" BasedOn="{StaticResource ComboBox1}" />
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ComboBoxItem1}" />



    <!--<Style x:Key="InputCBStyle" TargetType="ComboBox">
      
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlFontSize}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2,1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="35" />
        <Setter Property="IsTextSearchEnabled" Value="False" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBoxBase.TextChanged">
                <BeginStoryboard>
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsDropDownOpen">
                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
        
    </Style>-->


</ResourceDictionary>

